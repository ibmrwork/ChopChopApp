//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChopChop.Entity.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ChopChopEntities : DbContext
    {
        public ChopChopEntities()
            : base("name=ChopChopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ChopChopFaq> ChopChopFaqs { get; set; }
        public DbSet<ChopChopGeneral> ChopChopGenerals { get; set; }
        public DbSet<DeviceLoginDetail> DeviceLoginDetails { get; set; }
        public DbSet<MasterFAQ> MasterFAQs { get; set; }
        public DbSet<MasterLanguage> MasterLanguages { get; set; }
        public DbSet<MasterOrderStatu> MasterOrderStatus { get; set; }
        public DbSet<MasterPaymentType> MasterPaymentTypes { get; set; }
        public DbSet<MasterProcessingState> MasterProcessingStates { get; set; }
        public DbSet<MasterRefundReason> MasterRefundReasons { get; set; }
        public DbSet<MasterRestaurentStyle> MasterRestaurentStyles { get; set; }
        public DbSet<MasterRole> MasterRoles { get; set; }
        public DbSet<MasterSoldOut> MasterSoldOuts { get; set; }
        public DbSet<MenuItemModifier> MenuItemModifiers { get; set; }
        public DbSet<MenuItem> MenuItems { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<OrderRefund> OrderRefunds { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<RolesPermission> RolesPermissions { get; set; }
        public DbSet<SignUpOTP> SignUpOTPs { get; set; }
        public DbSet<UserAddress> UserAddresses { get; set; }
        public DbSet<UserFavoriteVendor> UserFavoriteVendors { get; set; }
        public DbSet<UserPrefrence> UserPrefrences { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserSoldOutPreference> UserSoldOutPreferences { get; set; }
        public DbSet<Vendor> Vendors { get; set; }
        public DbSet<VendorCommision> VendorCommisions { get; set; }
        public DbSet<VendorMenu> VendorMenus { get; set; }
        public DbSet<VendorRating> VendorRatings { get; set; }
        public DbSet<VendorTiming> VendorTimings { get; set; }
        public DbSet<VendorMedia> VendorMedias { get; set; }

        public virtual System.Data.Entity.Core.Objects.ObjectResult<sp_UserLogin_Result> sp_UserLogin(string userName, string password, string deviceId)
        {
            //var parameters = new System.Data.Entity.Core.Objects.ObjectParameter[] {new System.Data.Entity.Core.Objects.ObjectParameter("userName", userName)};
            var userNameParameter = userName != null ?
                new System.Data.Entity.Core.Objects.ObjectParameter("userName", userName) :
                new System.Data.Entity.Core.Objects.ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password != null ?
                new System.Data.Entity.Core.Objects.ObjectParameter("Password", password) :
                new System.Data.Entity.Core.Objects.ObjectParameter("Password", typeof(string));
    
            var deviceIdParameter = deviceId != null ?
                new System.Data.Entity.Core.Objects.ObjectParameter("deviceId", deviceId) :
                new System.Data.Entity.Core.Objects.ObjectParameter("deviceId", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserLogin_Result>("sp_UserLogin", userNameParameter, passwordParameter, deviceIdParameter);
        }
    }
}
